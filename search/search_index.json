{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"droid documentation","text":"<p><code>droid</code> is a PySigma wrapper allowing an easy adoption of Sigma and helps enabling Detection-As-Code. The ultimate goal of <code>droid</code> is to consume a repository Sigma rules and deploy them on one or multiple platform (SIEM/EDR).</p> <p>The tool also supports native SIEM/EDR search queries.</p> <p></p> <ul> <li> <p> Set up in few minutes</p> <p>Install <code>detect-droid</code> with <code>pip</code> and get up and running in minutes</p> <p> Getting started</p> </li> <li> <p> Enable automation</p> <p>Enable detection content versioning and take advantage of Sigma at scale</p> <p> Sigma Unleashed: A Realistic Implementation</p> </li> <li> <p> Made to measure</p> <p>Standardise the detection rules on your platforms, change the rules settings and more with few lines</p> <p> Configuration</p> </li> <li> <p> Open Source, EUPL</p> <p>droid is licensed under the EUPL and available on GitHub</p> <p> License</p> </li> </ul>"},{"location":"#features","title":"Features","text":"<p>Key features are:</p> <ol> <li>Validate the syntax of Sigma rules</li> <li>Convert them by applying a set of transforms per log source and platform</li> <li>Search in logs and report on findings</li> <li>Test the rules by leveraging Atomic Red Team\u2122 (work in progress)</li> <li>Deploy them with any compatible SIEM and EDR</li> </ol>"},{"location":"#supported-siemedr","title":"Supported SIEM/EDR","text":"Info <p>See the list of supported platforms (SIEM/EDR) here.</p>"},{"location":"configuration/","title":"Configure droid","text":"<p>The tool is flexible and requires a TOML (.toml) configuration file for various tasks. If you have cloned the example repository, just open <code>droid_config.toml</code>.</p> <p>The next sections will highlight the config per sections.</p>"},{"location":"configuration/#configure-the-basics","title":"Configure the basics","text":"<pre><code>[base]\n\nraw_rules_directory = \"rules/raw\" # (1)!\n\nsigma_validation_config = \"validation/validate.yml\" # (2)!\n\nsigma_filters_directory = \"filters/\" # (3)!\n...\n</code></pre> <ol> <li> <p>This is the location of the raw rules directory.</p> </li> <li> <p>This is the location of the Sigma validation config. See the appropriate section below.</p> </li> <li> <p>Optional. This is the location of the Sigma filters rules.</p> </li> </ol>"},{"location":"configuration/#configure-the-platform","title":"Configure the platform","text":"<p>Next, configure your platform in the <code>platforms</code> section. You will find in one of the platforms page the required parameters.</p> <pre><code>[platforms.supported_platform]\n\n...\n</code></pre> Warning <p>Make sure your platform is supported here.</p>"},{"location":"configuration/#configure-your-plaform-pipelines","title":"Configure your plaform pipelines","text":"<p><code>droid</code> ease the conversion of the Sigma rules for the desired platform by leveraging the Sigma pipelines. It applies the platforms you desire by log sources.</p> <p><code>droid</code> will look for a match with the Sigma <code>logsource</code> fields and the platform pipelines config.</p> proc_access_win_svchost_credential_dumping.yml<pre><code>title: Credential Dumping Attempt Via Svchost\nid: 174afcfa-6e40-4ae9-af64-496546389294\nstatus: test\ndescription: Detects when a process tries to access the memory of svchost to potentially dump credentials.\nreferences:\n    - Internal Research\nauthor: Florent Labouyrie\ndate: 2021/04/30\nmodified: 2022/10/09\ntags:\n    - attack.t1548\nlogsource:\n    product: windows\n    category: process_access\ndetection:\n    selection:\n        TargetImage|endswith: '\\svchost.exe'\n        GrantedAccess: '0x143a'\n    filter_main_known_processes:\n        SourceImage|endswith:\n            - '\\services.exe'\n            - '\\msiexec.exe'\n    condition: selection and not 1 of filter_main_*\nfalsepositives:\n    - Unknown\nlevel: high\n</code></pre> droid_config.toml<pre><code>[platforms.splunk.pipelines.windows_process_access]\n\npipelines = [\"pipelines/splunk_process_access.yml\", \"splunk_windows\"]\nproduct = \"windows\"\ncategory = \"process_access\"\n</code></pre> <p>In the above example, when the Sigma logsource <code>product</code> and <code>category</code> of the Sigma rules will match the configuration <code>platforms.splunk.pipelines.windows_process_access</code>, the Sigma pipelines will be loaded:</p> <ul> <li><code>splunk_windows</code> is part of the pySigma Splunk backend</li> <li><code>pipelines/splunk_process_access.yml</code> is a custom pipeline to apply the necessary transforms</li> </ul> Info <p>Make sure to install the appropriate pySigma backend for the supported platform. See the installation section.</p> splunk_process_access.yml<pre><code>name: Splunk Windows process access\npriority: 100\n\n# Author: Mathieu LE CLEACH\n# Purpose if this pipeline:\n# Process the windows/process_access rules in Splunk\n\ntransformations:\n  - id: index_condition\n    type: add_condition\n    conditions:\n      index: windows_sysmon\n      splunk_server: \"*prod.planet-express.local\"\n    rule_conditions:\n      - type: logsource\n        category: process_access\n        product: windows\n\npostprocessing:\n- type: template\n  template: |+\n    {{ query }} | table _time,host,user,SourceImage,TargetImage,CallTrace,GrantedAccess\n</code></pre> Info <p>If droid does not find a match, it will process the Sigma rule as \"non-configured\" since the log sources was not configured for the given platform. For the purpose of the automation through CI/CD pipelines, droid will not issue an error exit-code for non-configured log sources.</p>"},{"location":"configuration/#configure-the-validation","title":"Configure the validation","text":"<p>You can validate the Sigma rules on the syntax level by leveraging the pySigma rule validation. It requires a validation configuration file that can be placed in your repository.</p> validate.yml<pre><code>validators:\n    - all\n    - -tlpv1_tag\n    - -escaped_wildcard\n</code></pre> Note <p>Make sure to provide the path to your droid configuration.</p>"},{"location":"custom_fields/","title":"Rule custom fields","text":"<p>You can place custom fields in your rules to:</p> <ul> <li>Disable a rule: <code>disabled: True</code></li> <li>Remove a rule: <code>removed: True</code></li> </ul> <p>Additionally:</p> <ul> <li><code>ignore_search</code> to <code>True</code> will skip the search step</li> <li><code>ignore_export_error</code> to <code>True</code> will ignore the export error and integrity error</li> </ul> Info <p>The <code>ignore_export_error</code> option currently only works with raw detection rules.</p> <p>Some of the settings placed in your <code>droid</code> configuration file can be replaced as well.</p> example_sigma.yml<pre><code>title: Load Undocumented Autoelevated COM Interface\nid: fb3722e4-1a06-46b6-b772-253e2e7db933\nstatus: test\ndescription: COM interface (EditionUpgradeManager) that is not used by standard executables.\nreferences:\n    - https://www.snip2code.com/Snippet/4397378/UAC-bypass-using-EditionUpgradeManager-C/\n    - https://gist.github.com/hfiref0x/de9c83966623236f5ebf8d9ae2407611\nauthor: oscd.community, Dmitry Uchakin\ndate: 2020/10/07\nmodified: 2021/11/27\ntags:\n    - attack.defense_evasion\n    - attack.privilege_escalation\n    - attack.t1548.002\nlogsource:\n    category: process_access\n    product: windows\ndetection:\n    selection:\n        TargetImage|contains: 'EXCEL.EXE'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high\ncustom:\n    #ignore_search: True\n    disabled: True\n    #removed: True\n    #ignore_export_error: True\n    earliest_time: -1h@h\n    latest_time: now\n    cron_schedule: '5 * * * *'\n    alert.suppress: \"0\"\n    #alert.suppress.fields: \"customer,host,user\"\n    alert.digest_mode: \"1\"\n    actions: \"webhook\"\n    action.webhook.param.url: \"https://automation.pizza-planet.local/34432/44232\"\n</code></pre> <p>You can also replace the webhook URL at the rule level by using <code>action.webhook.param.url: \"$WEBHOOK_URL_SOMETHING\"</code>.</p>"},{"location":"getting-started/","title":"Getting started","text":""},{"location":"getting-started/#installation","title":"Installation","text":"<p><code>droid</code> is published as a Python package and can be installed with <code>pip</code> in a virtual environment or in a Docker container. The installation is straightforward:</p> <ul> <li>Install <code>droid</code> and the desired Sigma backends and pipelines</li> <li>Configure your droid configuration file</li> <li>Configure your Sigma pipelines</li> <li>Optional: Validate your rules using pySigma validators</li> </ul> <p>If you already have a repository containing all your Sigma rules or if you wish to start from scratch we made available a repository to start with <code>droid</code> by cloning it.</p>"},{"location":"getting-started/#install-droid","title":"Install droid","text":"<ol> <li>Open up a terminal and install <code>droid</code> with:</li> </ol> Latest0.1.X <pre><code>pip install detect-droid\n</code></pre> <pre><code>pip install detect-droid==\"0.1.X\"\n</code></pre>"},{"location":"getting-started/#install-the-sigma-backends","title":"Install the Sigma backends","text":"<p>For instance, if you intend to use the following backends:</p> <pre><code>pip install pysigma-backend-splunk\npip install pysigma-backend-kusto\npip install pySigma-backend-elasticsearch\n</code></pre> Note <p>You will find the full list of backends on the Sigma documentation page.</p>"},{"location":"getting-started/#install-additional-sigma-pipelines","title":"Install additional Sigma pipelines","text":"<p>This is optional but you can install additional pipelines. For instance:</p> <pre><code>pip install pysigma-pipeline-windows # (1)!\n</code></pre> <ol> <li>Windows logsource to Channel field and generic logsource to Windows audit events mapping</li> </ol> Note <p>You will find the full list of pipelines on the Sigma documentation page. Select \"Pipelines\" from \"Plugin Type\".</p>"},{"location":"raw_rules/","title":"Raw rules","text":"<p><code>droid</code> allows the usage of a plain SIEM/EDR query instead of Sigma in the <code>detection</code> field. This feature was implemented to make the use of a platform's advanced search while keeping Sigma's metadata.</p>"},{"location":"raw_rules/#configuration","title":"Configuration","text":"<p>First, decide where these rules will remain. For instance, these rules can remain at the following path: <code>rules/raw</code>. If you have multiple SIEM/EDR, you can create a subdirectory to split the rules by platform, for instance: <code>rules/raw/siem1</code>.</p> <p>Finally, set the path in your configuration file. <code>droid</code> will use the argument <code>-r</code> and check if the path matches</p> droid_config.toml<pre><code>[base]\n\nraw_rules_directory = \"rules/raw\"\n\nsigma_validation_config = \"validation/validate.yml\"\n</code></pre> Note <p>In the above example base configuration file, if we're using <code>droid -cf droid_config.toml -r rules/raw/splunk -p splunk -i</code> <code>droid</code> will match <code>rules/raw</code> and will enable the raw rules features.</p>"},{"location":"raw_rules/#usage","title":"Usage","text":"<p>To use a plain SIEM/EDR search query, just replace the Sigma's <code>detection</code> field as the following:</p> detect_web_rdmn.yml<pre><code>title: Detect Suspicious Web Activities\nid: 1b3b4d57-117b-4635-96a7-7d0d2c1e54b9\nstatus: experimental\ndescription: |\n  This Sigma rule detects suspicious web activities by matching web logs against a lookup table of suspicious IPs, user agents, and URLs.\nauthor: Apache25\ndate: 2024/04/05\nlogsource:\n  product: web\n  service: apache\ndetection: |-\n  index=web_logs sourcetype=access_combined\n  | lookup suspicious_activities.csv suspicious_ip AS clientip OUTPUT suspicious_ip\n  | lookup suspicious_activities.csv suspicious_user_agent AS useragent OUTPUT suspicious_user_agent\n  | lookup suspicious_activities.csv suspicious_url AS uri_path OUTPUT suspicious_url\n  | eval is_suspicious_ip=if(isnotnull(suspicious_ip), 1, 0)\n  | eval is_suspicious_user_agent=if(isnotnull(suspicious_user_agent), 1, 0)\n  | eval is_suspicious_url=if(isnotnull(suspicious_url), 1, 0)\n  | eval total_suspicious_score=is_suspicious_ip + is_suspicious_user_agent + is_suspicious_url\n  | where total_suspicious_score &gt; 0\n  | eval suspicious_reason=case(\n      is_suspicious_ip==1, \"Suspicious IP\",\n      is_suspicious_user_agent==1, \"Suspicious User Agent\",\n      is_suspicious_url==1, \"Suspicious URL\",\n      total_suspicious_score==2, \"Multiple Indicators\",\n      total_suspicious_score==3, \"Highly Suspicious\"\n    )\n  | stats count BY clientip, useragent, uri_path, suspicious_reason\n  | sort -count\n  | rename clientip AS \"Client IP\", useragent AS \"User Agent\", uri_path AS \"URL Path\", suspicious_reason AS \"Reason\"\n  | fields \"Client IP\", \"User Agent\", \"URL Path\", \"Reason\", count\n  | eval action_required=case(\n      count &gt; 10, \"Immediate Action\",\n      count &gt; 5, \"Review Required\",\n      count &lt;= 5, \"Monitor\"\n    )\n  | sort -action_required\n  | table \"Client IP\", \"User Agent\", \"URL Path\", \"Reason\", count, action_required\n  | rename count AS \"Suspicious Activity Count\"\nfields:\n  - clientip\n  - useragent\n  - uri_path\n  - suspicious_reason\n  - count\n  - action_required\nfalsepositives:\n  - Known internal tests\n  - False positives due to misconfiguration\nlevel: high\n</code></pre> Info <p>When using the <code>raw rules</code> the features to validate and convert the rules will be possible. Currently, <code>droid</code> does not support any custom validation rule for the raw rules. However, when using <code>droid</code> in a CI/CD pipeline workflow, you can run another script of your own to validate these rules.</p>"},{"location":"usage/","title":"Usage","text":"<p><code>droid</code> is able to:</p> <ul> <li>Validate the content of the rules</li> <li>Convert the Sigma rules</li> <li>Perform ad-hoc search on the platform and report for findings</li> <li>Export (deploy) the rules</li> <li>Check the integrity of the rules on platforms</li> </ul> Note <p><code>droid</code> is a command line tool.</p> <ul> <li>Make sure to precise the droid configuration file using <code>-cf</code></li> <li>You can select a directory (this will load all the rules within sub-directories) or a single rule</li> <li>You can generate a JSON logging file using <code>-j</code></li> </ul>"},{"location":"usage/#validate","title":"Validate","text":"Note <p>This requires a validation configuration, see here.</p> <pre><code>droid -cf droid_config.toml --platform microsoft_xdr \\\n--rules sigma/sigmahq-core/windows/process_creation/proc_creation_win_wmic_susp_process_creation.yml \\\n--validate\n</code></pre>"},{"location":"usage/#convert","title":"Convert","text":"<pre><code>droid -cf droid_config.toml --platform splunk \\\n--rules rules/sigma/ \\\n--compile -d\n</code></pre> Info <p>If you want to use the Sigma filters, you can store your filters in a directory and use the <code>sigma_filters_directory</code> parameter. See the configuration.</p>"},{"location":"usage/#search","title":"Search","text":"Note <p>This features works only with the supported platforms.</p> Info <p><code>droid</code> will report for findings as per the configured search timerange in your configuration. If there is any hit, it will raise a warning but not an error exit-code.</p> <pre><code>droid -cf droid_config.toml --platform microsoft_sentinel \\\n--rules sigma/sigmahq-core/windows/process_creation/proc_creation_win_wmic_susp_process_creation.yml \\\n--search\n</code></pre> <p>You can use the search feature to use Microsoft XDR converted rules with Microsoft Sentinel as a search head. This will use your Microsoft Sentinel setup to search. It's also compatible with the <code>-mssp</code> mode.</p> <pre><code>droid -cf droid_config.toml --platform microsoft_xdr \\\n--rules sigma/sigmahq-core/windows/process_creation/proc_creation_win_wmic_susp_process_creation.yml \\\n--search --sentinel-xdr\n</code></pre>"},{"location":"usage/#mssp","title":"MSSP","text":"<p>Currently the MSSP mode is available for Microsoft Sentinel.</p> <pre><code>droid -cf droid_config.toml --platform microsoft_sentinel --rules sigma/sigmahq-core/windows/process_creation/proc_creation_win_wmic_susp_process_creation.yml --search --mssp\n</code></pre>"},{"location":"usage/#test-using-atomic-red-team","title":"Test using Atomic Red Team","text":"Example <p>This feature is under development, stay tuned!</p>"},{"location":"usage/#export","title":"Export","text":"Info <p>If you have set one or multiple rule with any of the custom field <code>disabled</code> or <code>removed</code> as <code>True</code>, <code>droid</code> will make sure it is set as disabled or remove the detection rule if it exists on the platform.</p> <pre><code>droid -cf droid_config.toml --platform splunk \\\n--rules rules/rules/sigma/ \\\n--export -d\n</code></pre>"},{"location":"usage/#integrity","title":"Integrity","text":"Info <p>This feature verify if the id, description and rule search match the platform's saved search.</p> <pre><code>droid -cf droid_config.toml --platform splunk \\\n--rules rules/rules/sigma/ \\\n--integrity -d\n</code></pre>"},{"location":"platforms/","title":"Platforms","text":"<p>The following platforms are supported:</p> <ul> <li>Splunk</li> <li>Elastic Security</li> <li>Microsoft Sentinel</li> <li>Microsoft XDR</li> </ul> Info <p>If the platform you are using is missing, feel free to contribute to the project.</p>"},{"location":"platforms/elastic_security/","title":"Elastic Security","text":"<ul> <li> Search feature</li> <li> Export feature<ul> <li> Remove detection rules</li> <li> Disable detection rules</li> </ul> </li> <li> Detection rule actions</li> </ul>"},{"location":"platforms/elastic_security/#index-detection","title":"Index detection","text":"Warning <p>It is necessary to specify the indexes within the Sigma pipeline or it will be defaulted to <code>logs-*</code>.</p> Single indexMultiple index <pre><code>name: Elastic Windows Process Creation\npriority: 100\n\ntransformations:\n\n- id: index_set_state\n    type: set_state\n    key: \"index\"\n    val: \"windows-sysmon.*\"\n    rule_conditions:\n    - type: logsource\n        product: windows\n        category: process_creation\n</code></pre> <pre><code>name: Elastic Windows Process Creation\npriority: 100\n\ntransformations:\n\n- id: index_set_state\n    type: set_state\n    key: \"index\"\n    val:\n        - \"windows-sysmon.*\"\n        - \"windows-sysmon2.*\"\n    rule_conditions:\n    - type: logsource\n        product: windows\n        category: process_creation\n</code></pre>"},{"location":"platforms/elastic_security/#authentication","title":"Authentication","text":"<p>As of today, the basic authentication is supported. If API Tokens are prefered, feel free to contribute.</p> <ul> <li><code>basic</code>: Authenticate using username and password</li> </ul> <p>When using the Azure Registation App, load the following environment variables:</p> <ul> <li><code>DROID_ELASTIC_USERNAME</code> : Elastic username</li> <li><code>DROID_ELASTIC_PASSWORD</code> : Elastic password</li> </ul>"},{"location":"platforms/elastic_security/#supported-platforms","title":"Supported Platforms","text":"<p>For Sigma rules both <code>esql</code> (ES|QL) and <code>eql</code> (EQL) are supported. However since only esql supports correlations rules, it is advised to use esql only. There are no known benefits to using EQL over ES|QL.</p> <p>For raw rules, both esql (ES|QL) and eql (EQL) are supported. Always use the <code>raw_language</code> custom field to specify the language used in the Sigma yaml file.</p> <p>For non correlation ES|QL rules, the metadata fields are automatically added to the query for better deduplication by the Elastic backend. For correlation ES|QL rules this is not needed since correlation rules are already deduplicated.</p>"},{"location":"platforms/elastic_security/#main-config","title":"Main config","text":"Parameter Mandatory Default Value Description kibana_url Yes N/A The Base URL to your Kibana, since the Security API used goes via Kibana not Elasticsearch kibana_ca No False Certificate Chain used on the Kibana host elastic_ca No None Certificate Chain used on the Elastic host, can also be the same as Kibana, only used when Searching elastic_tls_verify No False Used to turn on and off Certificate Validation for Elastic Connections, only used when Searching schedule_interval No \"1\" Interval at which the alert rule should run schedule_interval_unit No \"h\" Interval unit minute (m) or hour (h) license No \"DRL\" The license of your rule legacy_esql No false This flag is only if you are on an Elastic Version that needs the square brackets around the metadata info. building_block_prefix No None Optional prefix for Building Block Rules to distinguish from Alert rules, defaults to BB alert_prefix No BB Optional prefix to your imported rules to distinguish them <pre><code>[platforms]\n\n[platforms.elastic]\nauth_method = \"basic\"\nkibana_url = \"https://kibana.test.org\"\nkibana_ca = \"kibana-ca.pem\" # Or False to ignore certificates\nelastic_ca = \"elastic-ca.pem\"\nelastic_tls_verify = true\nelastic_hosts = [\n    \"https://elasticsearch01.test.org:9200\",\n    \"https://elasticsearch02.test.org:9200\",\n    \"https://elasticsearch03.test.org:9200\",\n]\nschedule_interval = 5\nschedule_interval_unit = \"m\"\nlicense = \"DRL\"\nalert_prefix = \"SIGMA\"\nlegacy_esql = false\n\n# Pipeline example\n[platforms.elastic.pipelines.windows_process_creation]\npipelines = [\"pipelines/ecs_pipeline.yml\"]\nproduct = \"windows\"\ncategory = \"process_creation\"\n...\n</code></pre>"},{"location":"platforms/elastic_security/#sigma-custom-fields","title":"Sigma Custom Fields","text":"<p>The Custom Fields available with the Elastic Integration are:</p> Custom Field Values Description raw_language esql/eql The Language used on raw Rules disabled true/false Set to true if you want to disable the rule removed true/false Set to true if you want to delete the rule building_block true/false Set to true if your rule should be a building block index list of strings Set one or more indexes to be used. Use a list (-) if you want more than one index"},{"location":"platforms/microsoft_sentinel/","title":"Microsoft Sentinel","text":"<ul> <li> Search feature</li> <li> Export feature<ul> <li> Remove detection rules</li> <li> Disable detection rules</li> </ul> </li> <li> MSSP feature<ul> <li> Search and retrieve results from multiple tenants</li> <li> Export in multiple tenants</li> </ul> </li> <li> Detection rule actions</li> </ul> Note <p>It is possible to deploy Microsoft Defender for Endpoint rules to Sentinel using the the <code>sm</code> argument.</p>"},{"location":"platforms/microsoft_sentinel/#authentication","title":"Authentication","text":"<p>Two authentication mode are supported:</p> <ul> <li><code>default</code>: Default authentication via <code>az login</code></li> <li><code>app</code>: Azure Registration App</li> </ul> <p>When using the default authentication:</p> <ol> <li>Head to <code>portal.azure.com</code> and authenticate using MFA</li> <li>Use <code>az cli</code> to fetch the authentication session</li> </ol> <p>When using the Azure Registation App, load the following environment variables:</p> <ul> <li><code>DROID_AZURE_TENANT_ID</code>: Azure tenant ID</li> <li><code>DROID_AZURE_CLIENT_ID</code>: Client ID of the registration app</li> <li><code>DROID_AZURE_CLIENT_SECRET</code>: Azure client secret</li> </ul> <p>The keys <code>workspace_id</code>, <code>workspace_name</code>, <code>subscription_id</code> and <code>resource_group</code> are the base workspace declaration but they can be replaced with the following environment variables:</p> <ul> <li><code>DROID_AZURE_WORKSPACE_ID</code></li> <li><code>DROID_AZURE_WORKSPACE_NAME</code></li> <li><code>DROID_AZURE_SUBSCRIPTION_ID</code></li> <li><code>DROID_AZURE_RESOURCE_GROUP</code></li> </ul> Note <p>The authentication method can be provided using the environment variables <code>DROID_AZURE_SEARCH_AUTH</code> and <code>DROID_AZURE_EXPORT_AUTH</code>. This will override the parameters <code>search_auth</code> and <code>export_auth</code> from the TOML configuration.</p> <p>Custom authentication via hook:</p> <p>We have also added the ability retrieve Azure Tokens from any custom app via a hook.</p> <p>If the environment variable <code>DROID_AZURE_TOKEN_HOOK</code> is set with a URL, the hook attempts to acquire the token from that URL via a <code>GET</code> request. The response should contain a JSON object with the <code>access_token</code> key, which will be used as the token.</p> <p>The hook function  supports dynamic URL configuration using placeholders:</p> <ul> <li><code>{TENANT_ID}</code>: Replaced with the provided or default tenant ID.</li> <li><code>{SCOPE}</code>: Replaced with the requested scope.</li> </ul> <p>Additional infos:</p> <ul> <li>Uses the cached token if it is still valid and the scope matches.</li> <li>Supports retries for token retrieval, with retry count and delay.</li> <li>If <code>DROID_AZURE_TOKEN_X_API_KEY</code> environment variable is present, it will be included in the request headers.</li> </ul>"},{"location":"platforms/microsoft_sentinel/#permissions","title":"Permissions","text":"<p>The required permissions are:</p> Role Type Description Microsoft Contributor SecurityInsights Ability to perform Hunting queries and edit detection rules Read access Azure Resource Graph MSSP: Read all the resources of any subscription"},{"location":"platforms/microsoft_sentinel/#main-config","title":"Main config","text":"Parameter Mandatory Type Value Description search_auth Yes String Authentication method: \"app\" or \"default\". export_auth Yes String Authentication method: \"app\" or \"default\". query_period Yes Integer The period of time the query should run over, in hours. query_frequency Yes Integer How frequently the query should run, in hours. days_ago Yes Integer The lookback period of time when searching, in days. timeout Yes Integer Search timeout in seconds. alert_prefix No String Prefix for the exported alert. threshold_operator No String Operator used for alert threshold comparison. Accepted values can be found here. threshold_value No Integer Threshold value for generating alerts. suppress_status No Boolean Whether to suppress the alert or not. suppress_period No Integer Time period (in hours) to suppress the alert after it triggers. incident_status No Boolean Whether to create incidents for triggered alerts. grouping_status No Boolean Enable or disable grouping of alerts into incidents. grouping_period No Integer Time window (in hours) for grouping alerts into incidents. grouping_reopen No Boolean Whether to reopen closed incidents if new alerts match the group criteria. grouping_method No String Method for grouping alerts. Accepted values can be found here\" workspace_id Yes String Workspace ID used for search queries. workspace_name Yes String Name of the base workspace. subscription_id Yes String Subscription ID required for setting alerts. resource_group Yes String Resource group name for setting alerts <pre><code>[platforms.microsoft_sentinel]\n\n## For searches\n\ndays_ago = 30\ntimeout = 120\n\n## For alerts\nalert_prefix = \"[PLANET-EXPRESS]\"\nquery_frequency = 1\nquery_period = 14\nthreshold_operator = \"GreaterThan\"\nthreshold_value = 1\nsuppress_status = true\nsuppress_period = 2\nincident_status = true\ngrouping_status = true\ngrouping_period = 5\ngrouping_reopen = false\ngrouping_method = \"AllEntities\"\n\n## Authentication\n\nsearch_auth = \"app\"\nexport_auth = \"app\"\n\nworkspace_id = \"d32b8ab7-650e-4dcb-b576-461827daf5b1\"\nworkspace_name = \"sentinel-planet_express-prod\"\nsubscription_id = \"2b27a0e0-8e25-46fe-b2a6-3fcaed7cad57\"\nresource_group = \"planet_express_resource_group\"\n\n## Pipelines example\n\n[platforms.microsoft_sentinel.pipelines]\n\n    [platforms.microsoft_sentinel.pipelines.windows_process_creation]\n\n    pipelines = [\"pipelines/sentinel_process_creation.yml\", \"azure_monitor\"]\n    product = \"windows\"\n    category = \"process_creation\"\n\n    [platforms.microsoft_sentinel.pipelines.windows_file_event]\n\n    pipelines = [\"pipelines/sentinel_file_event.yml\"]\n    product = \"windows\"\n    category = \"file_event\"\n</code></pre>"},{"location":"platforms/microsoft_sentinel/#mssp-mode","title":"MSSP mode","text":"<p>The MSSP mode (<code>--mssp</code>) in Microsoft Sentinel allows to perform various operations involving multiple workspaces.</p> <p>When searching (<code>--search</code>), this mode allows to query multiple Microsoft Sentinel workspaces for one or multiple rules. To achieve that, <code>droid</code> will first list all the Microsoft Sentinel workspaces using an Azure Resource Graph query and will query all the workspaces with parallel tasks.</p> <p>This mode also allows to export (<code>--export</code>) detection rules to specific Microsoft Sentinel workspaces included in the droid configuration file.</p> <p>To designate the Microsoft Sentinel workspaces, define them under the <code>export_list_mssp</code> section as a dictionary.</p> <pre><code>[platforms.microsoft_sentinel.export_list_mssp]\n\n    [platforms.microsoft_sentinel.export_list_mssp.momcorp]\n\n    workspace_name = \"momcorp_sentinel\"\n    tenant_id = \"10e5ca4d-25ac-4d17-ae8d-0314ff0d8d44\"\n    resource_group_name = \"momcorp_resource_group_prod\"\n    subscription_id = \"98b80a67-4fec-424c-8f06-56be08deae77\"\n\n    [platforms.microsoft_sentinel.export_list_mssp.doop]\n\n    workspace_name = \"doop_sentinel\"\n    tenant_id = \"900b0bdf-4de1-48bb-bda4-862f638a92ac\"\n    resource_group_name = \"doop_resource_group_prod\"\n    subscription_id = \"94406b12-28d7-4505-9bfc-fade6ec9a560\"\n</code></pre> Note <p>The integrity feature (<code>--integrity</code>) is also available.</p> <p>When using the search mode along with the <code>--mssp</code> argument you can exclude some workspaces from the search.</p> <pre><code>[platforms.microsoft_sentinel]\n...\nmssp_search_exclude_list = [\"Foo\", \"Sentinel3\"]\n</code></pre>"},{"location":"platforms/microsoft_sentinel/#sigma-custom-fields","title":"Sigma Custom Fields","text":"Custom Field Values Description disabled true/false Set to true if you want to disable the rule removed true/false Set to true if you want to delete the rule query_frequency integer Run query every X hour query_period integer Lookup data from the last X hour entity_mappings dict Configure the entity mappings sentinel_entity_mappings dict Configure the sentinel entity mappings <p>Use the following example to configure the entity mappings and sentinel entity mappings in a Sigma rule:</p> <pre><code>...\ncustom:\n  entity_mappings:\n    - entity_type: IP\n      field_mappings:\n        - identifier: Address\n          column_name: RemoteIP\n    - entity_type: Host\n      field_mappings:\n        - identifier: HostName\n          column_name: DeviceName\n  sentinel_entities:\n    - fieldA\n    - fieldB\n</code></pre>"},{"location":"platforms/microsoft_xdr/","title":"Microsoft XDR","text":"<ul> <li> Search feature</li> <li> Export feature<ul> <li> Remove detection rules</li> <li> Disable detection rules</li> </ul> </li> <li> MSSP feature<ul> <li> Search in multiple tenants</li> <li> Export in multiple tenants</li> </ul> </li> <li> Detection rule actions<ul> <li> forceUserPasswordReset</li> <li> disableUser</li> <li> markUserAsCompromised</li> <li> stopAndQuarantineFile</li> <li> restrictAppExecution</li> <li> initiateInvestigation</li> <li> runAntivirusScan</li> <li> collectInvestigationPackage</li> <li> isolateDevice</li> <li> blockFile</li> <li> allowFile</li> </ul> </li> </ul>"},{"location":"platforms/microsoft_xdr/#limitations","title":"Limitations","text":"<p>Since the PySigma backend pySigma-backend-kusto does not yet support correlation rules only standard sigma and raw rules are supported.</p>"},{"location":"platforms/microsoft_xdr/#authentication","title":"Authentication","text":"<p>Two authentication mode are supported:</p> <ul> <li><code>default</code>: Default authentication via <code>az login</code></li> <li><code>app</code>: Azure Registration App</li> </ul> <p>When using the default authentication:</p> <ol> <li>Head to <code>portal.azure.com</code> and authenticate using MFA</li> <li>Use <code>az cli</code> to fetch the authentication session</li> </ol> <p>When using the Azure Registation App, load the following environment variables:</p> <ul> <li><code>DROID_AZURE_TENANT_ID</code>: Azure tenant ID</li> <li><code>DROID_AZURE_CLIENT_ID</code>: Client ID of the registration app</li> <li><code>DROID_AZURE_CLIENT_SECRET</code>: Azure client secret</li> </ul> <p>Alternatively you can add a credential file config to the toml file:</p> <pre><code>[platforms]\n[platforms.microsoft_xdr]\ncredential_file = \"microsoft365defender-authentication.yml\"\n</code></pre> <p>The file should look like this:</p> <pre><code>client_id: 123456\nclient_secret: 123456\ntenant_id: 123456\n</code></pre> <p>This will take precedence over the environment variables.</p> <p>For certificate-based authentication, you can add the following configuration:</p> <pre><code>[platforms]\n[platforms.microsoft_xdr]\nauth_cert = \"your_cert_file.pem\"\n</code></pre> <p>Replace <code>your_cert_file.pem</code> with the path to your certificate file. This method will use the provided certificate for authentication. The certificate password is only needed if the private key. To provide a password you can use the environment variable <code>DROID_AZURE_CERT_PASS</code> or use <code>cert_pass: \"password\"</code> in the credential file.</p> Note <p>The PEM file specified in the <code>auth_cert</code> configuration must contain both the private key and the public key, as the public key is used for fingerprinting purposes.</p> <p>The keys <code>workspace_id</code> and <code>workspace_name</code> are the base workspace declaration but this values can be replaced with the environments <code>DROID_AZURE_WORKSPACE_ID</code> and <code>DROID_AZURE_WORKSPACE_NAME</code>.</p> Note <p>When using the default authentication, set the <code>tenant_id</code> in the configuration</p> <p>Custom authentication via hook:</p> <p>We have also added the ability retrieve Azure Tokens from any custom app via a hook.</p> <p>If the environment variable <code>DROID_AZURE_TOKEN_HOOK</code> is set with a URL, the hook attempts to acquire the token from that URL via a <code>GET</code> request. The response should contain a JSON object with the <code>access_token</code> key, which will be used as the token.</p> <p>The hook function  supports dynamic URL configuration using placeholders:</p> <ul> <li><code>{TENANT_ID}</code>: Replaced with the provided or default tenant ID.</li> </ul> <p>Additional infos:</p> <ul> <li>Uses the cached token if it is still valid and the scope matches.</li> <li>Supports retries for token retrieval, with retry count and delay.</li> <li>If <code>DROID_AZURE_TOKEN_X_API_KEY</code> environment variable is present, it will be included in the request headers.</li> </ul>"},{"location":"platforms/microsoft_xdr/#permissions","title":"Permissions","text":"<p>The required permissions for the app registration are the following:</p> Microsoft Graph Type Description CustomDetection.ReadWrite.All Application Read and write all custom detection rules ThreatHunting.Read.All Application Run hunting queries"},{"location":"platforms/microsoft_xdr/#supported-platforms","title":"Supported Platforms","text":"<p>Both Sigma and raw rules are supported under the platform name <code>microsoft_xdr</code>.</p>"},{"location":"platforms/microsoft_xdr/#main-config","title":"Main config","text":"Parameter Mandatory Default Value Description search_auth Yes N/A Authentication method: \"app\" or \"default\" export_auth Yes N/A Authentication method: \"app\" or \"default\" days_ago No 1 The lookback period time when using the search feature expressed in days (from 1 to 30) query_period Yes N/A The period of time the query should run over. Accepted Values are: 1h, 3h, 12h, 24h or 0 for near realtime, however this only works on quick queries, Sigma queries should always be OK, but RAW rules might not work alert_prefix No None Prefix for the exported rule name tenant_id No None Tenant ID when using \"default\" credential_file No None A YAML file with your credentials if you do not want to use the environment variables auth_cert No None A certificate file (PEM) when using the certificate-based authentication <pre><code>[platforms]\n[platforms.microsoft_xdr]\n\nsearch_auth = \"app\"\nexport_auth = \"app\"\nquery_period = \"1h\"\ndays_ago = 3\nalert_prefix = \"SIGMA\"\n\n[platforms.microsoft_xdr.pipelines.process_creation]\npipelines = [\"pipelines/xdr_process_creation.yml\", \"microsoft_xdr\"]\nproduct = \"windows\"\ncategory = \"process_creation\"\n...\n</code></pre>"},{"location":"platforms/microsoft_xdr/#sigma-custom-fields","title":"Sigma Custom Fields","text":"Custom Field Values Description disabled true/false Set to true if you want to disable the rule removed true/false Set to true if you want to delete the rule action list The actions that should be performed on rule trigger, see action section for more information impactedAssets list The impactedAssets are needed for Asset mapping to the alerts. Defaults to Device = deviceId"},{"location":"platforms/microsoft_xdr/#action","title":"Action","text":"<p>An identifier is required for all actions. However, the script will automatically add the necessary fields to the query for actions with only one selection.</p> Action Identifier Isolation Type Device Group forceUserPasswordReset accountSid, initiatingProcessAccountSid disableUser accountSid, initiatingProcessAccountSid markUserAsCompromised accountObjectId, initiatingProcessAccountObjectId stopAndQuarantineFile sha1, initiatingProcessSHA1 restrictAppExecution initiateInvestigation runAntivirusScan collectInvestigationPackage isolateDevice selective, full blockFile sha256, sha1, initiatingProcessSHA1, initiatingProcessSHA256 List of Device Groups allowFile sha256, sha1, initiatingProcessSHA1, initiatingProcessSHA256 List of Device Groups Danger <p>Never add both \"block\" and \"allow\" files simultaneously, as this can cause significant issues.</p> <pre><code>custom:\n  disabled: false\n  actions:\n    - action: forceUserPasswordReset\n      identifier: accountSid #accountSid, initiatingProcessAccountSid\n    - action: disableUser\n      identifier: initiatingProcessAccountSid #accountSid, initiatingProcessAccountSid\n    - action: markUserAsCompromised\n      identifier: initiatingProcessAccountObjectId #accountObjectId, initiatingProcessAccountObjectId\n    - action: stopAndQuarantineFile\n      identifier: initiatingProcessSHA1 # sha1, initiatingProcessSHA1\n    - action: restrictAppExecution\n    - action: initiateInvestigation\n    - action: runAntivirusScan\n    - action: collectInvestigationPackage\n    - action: isolateDevice\n      isolationType: selective # full, selective\n\n    ## Allow or Block file, never both!\n    - action: blockFile\n      deviceGroupNames:\n      identifier: initiatingProcessSHA256 # sha256, sha1, initiatingProcessSHA1, initiatingProcessSHA256\n    #- action: allowFile\n    #  deviceGroupNames:\n    #  identifier: initiatingProcessSHA256 # sha256, sha1, initiatingProcessSHA1, initiatingProcessSHA256\n</code></pre>"},{"location":"platforms/microsoft_xdr/#impacted-assets","title":"Impacted Assets","text":"<p>When deploying raw, the custom field <code>impactedAssets</code> is required for the asset mapping in the resulting alerts.</p> Note <p>The default value is currently <code>deviceId</code> but it might not always work depending on your KQL. As for the Sigma rules, if you make the use of <code>| project</code> for instance, make sure to output <code>DeviceId</code>.</p> Impacted Asset Type Identifier (Allowed Values) Device deviceId, deviceName Mailbox accountUpn, initiatingProcessAccountUpn User targetAccountUpn, accountObjectId, accountSid, accountUpn, initiatingProcessAccountObjectId, initiatingProcessAccountSid, initiatingProcessAccountUpn <pre><code>custom:\n    # ...\n    impactedAssets:\n    - impactedAssetType: Device\n        identifier: deviceId #deviceId, deviceName\n    - impactedAssetType: Mailbox\n        identifier: initiatingProcessAccountUpn #accountUpn, initiatingProcessAccountUpn\n    - impactedAssetType: User\n        identifier: initiatingProcessAccountUpn # targetAccountUpn, accountObjectId, accountSid, accountUpn, initiatingProcessAccountObjectId, initiatingProcessAccountSid, initiatingProcessAccountUpn\n</code></pre> Warning <p>Failing to provide this field will result in non-working detection rules on the platform. We advise to introduce some validation check in your CI/CD process for the Microsoft XDR raw rules.</p>"},{"location":"platforms/splunk/","title":"Splunk","text":"<ul> <li> Search feature</li> <li> Export feature<ul> <li> Remove detection rules</li> <li> Disable detection rules</li> </ul> </li> <li> Detection rule actions<ul> <li> Email</li> <li> Webhook</li> </ul> </li> </ul> <p>To use Splunk, the following sections are required:</p> <ul> <li><code>[platforms.splunk]</code>: handle the basic configuration and the SIEM settings for searches and alerts</li> <li><code>[platforms.splunk.savedsearch_parameters]</code>: saved search parameters</li> <li><code>[platforms.splunk.action]</code>: action for rules</li> </ul>"},{"location":"platforms/splunk/#environment-variables","title":"Environment variables","text":"<p><code>droid</code> will require the following environment variables to authenticate on Splunk:</p> <ul> <li><code>DROID_SPLUNK_USER</code>: Splunk user</li> <li><code>DROID_SPLUNK_PASSWORD</code>: Splunk user password</li> </ul> <p>The following environment variables can be set:</p> <ul> <li><code>DROID_SPLUNK_URL</code>: Replace the Splunk URL parameter.</li> <li><code>DROID_SPLUNK_WEBHOOK_URL</code>: Replace the Splunk webhook URL</li> </ul>"},{"location":"platforms/splunk/#main-config","title":"Main config","text":"<pre><code>[platforms.splunk]\n\nurl = \"splunksh-dev.pizza-planet.local\" # (1)!\nverify_cert = true\nport = \"8089\"\n\n# user and password are passed in environment variable\n\ntest_earliest_time = \"-24h@h\" # (2)!\ntest_latest_time = \"now\" # When using option (--search/-s) # (3)!\njob_ttl = 86400 # (4)!\nacl_update_owner = \"nobody\" # (5)!\nacl_update_perms_read = \"group1, group2\" # (6)!\n\n## For alerts\n# General config\n\nearliest_time = \"-1h@h\" # (7)!\nlatest_time = \"now\" # (8)!\ncron_schedule = \"0 * * * *\"\nalert_expiration = \"7d\"\n...\n</code></pre> <ol> <li> <p>The hostname of Splunk, can be replace by an env variable.</p> </li> <li> <p>Search feature (--search/-s): earliest time for the searches. It must be a Splunk time modifier.</p> </li> <li> <p>Search feature (--search/-s): latest time for the searches. It must be a Splunk time modifier.</p> </li> <li> <p>Search feature (--search/-s): Set the job TTL in seconds.</p> </li> <li> <p>Search feature (--search/-s): Set the owner of the search. Useful if droid reports for findings.</p> </li> <li> <p>Search feature (--search/-s): Set the groups read permissions.</p> </li> <li> <p>Export (deploy) feature (--export/-e): earliest time for the saved-searches. It must be a Splunk time modifier.</p> </li> <li> <p>Export (deploy) feature (--export/-e): latest time for the saved-searches. It must be a Splunk time modifier.</p> </li> </ol> Info <p>DROID fetches the url of Splunk via the key <code>url</code> but this value can be replaced with the environment <code>DROID_SPLUNK_URL</code>. This is also valid for webhook URL when <code>DROID_SPLUNK_WEBHOOK_URL</code> exists.</p>"},{"location":"platforms/splunk/#savedsearch-config","title":"Savedsearch config","text":"<pre><code>[platforms.splunk.savedsearch_parameters]\n\nalert_type = \"number of events\"\napp = \"pizza_app_rules\"\nsharing = \"app\"\nalert_comparator = \"greater than\"\nalert_threshold = 0\n\"alert.track\" = 1\nallow_skew = \"67%\"\n\"alert.suppress\" = 1\n\"alert.digest_mode\" = 0 # Per result (per row)\n#\"alert.suppress.period\" = \"8h\" # Optional\n#\"alert.suppress.fields\" = \"pizza_client,host\" # Optional\n\n    # [platforms.splunk.savedsearch_parameters.suppress_fields_groups.group_name]\n    # Optional: define a suppress fields groups by logsource (.e.g. web)\n\n    #[platforms.splunk.savedsearch_parameters.suppress_fields_groups.windows_image_load]\n\n    #category = \"image_load\"\n    #product = \"windows\"\n</code></pre>"},{"location":"platforms/splunk/#action","title":"Action","text":"<p>Using emails:</p> <pre><code>[platforms.splunk.action]\n\nactions = \"email\"\n\"action.email.to\" = \"bender.rodriguez@pizza-planet.local\"\n\"action.email.subject\" = \"Alert: $name$\"\n\"action.email.message.alert\" = \"Description: $description$\"\n</code></pre> <p>Using webhooks:</p> <pre><code>[platforms.splunk.action]\n\nactions = \"webhook\"\n\"action.webhook.param.url\" = \"https://automation.pizza-planet.local/2342/32322\" # (1)!\n</code></pre> <ol> <li>Place your webhook URL or replace it in your env variable.</li> </ol>"}]}